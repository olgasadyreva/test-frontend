{"version":3,"sources":["components/Header/Header.js","Validation.js","reducers/index.js","store.js","components/User/User.js","components/FormAuth/FormAuth.js","components/Home/Home.js","actions/index.js","components/FormRegistr/FormRegistr.js","components/FormEdit/FormEdit.js","components/MyAccount/MyAccount.js","App.js","reportWebVitals.js","index.js"],"names":["headerElement","className","validateFields","username","validator","isEmpty","isLength","min","email","isEmail","password","repeatpassword","users","state","action","type","id","payload","initialState","localStorage","getItem","JSON","parse","store","createStore","reducer","subscribe","setItem","stringify","getState","user","props","value","validateOnChange","error","submitCalled","allFieldsValidated","FormAuth","validationFunc","evt","field","target","name","this","setState","fieldVal","e","preventDefault","emailError","validateEmail","passwordError","validatePassword","every","Object","values","filter","el","length","window","location","hash","alert","titleLink","setTimeout","Form","method","onSubmit","handleSubmit","htmlFor","placeholder","onChange","handleChange","onBlur","handleBlur","onFocus","handleFocusInput","onMouseDown","map","User","onBtnEditUsersClick","editUser","React","Component","Home","registr","newState","FormRegistr","usernameError","validateUsername","repeatpasswordError","validaterepeatPassword","currentUser","Math","random","toString","dispatch","showAllFieldsValidated","connect","FormEdit","split","formElement","document","forms","edit","elements","currentState","onClick","history","back","myAccount","console","dir","href","App","formName","isAuth","local","assign","exact","path","component","to","MyAccount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a89aacbd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\n\r\nconst headerElement = () => {\r\n    return (\r\n        <h1 className=\"title\">SPA - Регистрация (авторизация) пользователей</h1>\r\n    )\r\n}\r\n\r\nexport default headerElement;","import validator from 'validator';\r\n\r\n/*\r\n * This class contains methods for validating fields using 'validator.js' library methods\r\n * The methods return error message if validation failed and false otherwise\r\n * You can use all supported validators and sanitizers of 'validator.js' libaray\r\n * See their docs here https://github.com/validatorjs/validator.js\r\n */\r\n\r\nclass ValidateFields {\r\n  /*\r\n   * A method that takes in the email\r\n   * Validates it\r\n   * Returns the response either error or false if there is no error\r\n   */\r\n  validateUsername(username) {\r\n    if (validator.isEmpty(username)) {\r\n      return 'Поле username обязательно для заполнения';\r\n    } else if (!validator.isLength(username, { min: 3 })) {\r\n      return 'Имя должно содержать не менее 3 символов';\r\n    }\r\n    return false;\r\n  }\r\n\r\n   validateEmail(email) {\r\n    if (validator.isEmpty(email)) {\r\n      return 'Поле email обязательно для заполнения';\r\n    } else if (!validator.isEmail(email)) {\r\n      return 'Неверный адрес электронной почты';\r\n    }\r\n    return false;\r\n  }\r\n\r\n  validatePassword(password) {\r\n    if (validator.isEmpty(password)) {\r\n      return 'Поле password обязательно для заполнения';\r\n    } else if (!validator.isLength(password, { min: 8 })) {\r\n      return 'Пароль должен содержать не менее 8 символов';\r\n    }\r\n    return false;\r\n  }\r\n\r\n  validaterepeatPassword(repeatpassword, password) {\r\n    if (validator.isEmpty(repeatpassword)) {\r\n      return 'Поле repeat password обязательно для заполнения';\r\n    } else if (!validator.isLength(repeatpassword, { min: 8 })) {\r\n      return 'Повторный пароль должен содержать не менее 8 символов';\r\n    }else if (password !== repeatpassword) {\r\n      return 'Пароли не совпадают';\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nconst validateFields = new ValidateFields();\r\n\r\n// export the class instance, so we can import and use it anywhere\r\nexport { validateFields };","const users = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ('REGISTR'):\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          username: action.payload.username,\r\n          email: action.payload.email,\r\n          password: action.payload.password\r\n        }\r\n      ];\r\n\r\n    case 'EDIT USER':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state\r\n    }\r\n}\r\n\r\nexport default users;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst initialState = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\nconst store = createStore(reducer, initialState);\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('users', JSON.stringify(store.getState()));\r\n\r\n  });\r\n\r\nexport default store;","import React from 'react';\r\n\r\nconst user = (props) => {\r\n  const {id, username, email, password } = props;\r\n\r\n  return(\r\n    <li className=\"user-item\" key={id} >\r\n      <div className=\"user-cell\">{username}</div>\r\n      <div className=\"user-cell\">{email}</div>\r\n      <div className=\"user-cell\">{password}</div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default user;","import React from 'react';\r\nimport { Form } from 'reactstrap';\r\nimport { validateFields } from '../../Validation';\r\nimport store from '../../store';\r\nimport User from '../User/User';\r\n\r\nconst initialState = {\r\n  email: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n  password: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n\r\n  submitCalled: false,\r\n  allFieldsValidated: false,\r\n};\r\n\r\nclass FormAuth extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n/*\r\n * validates the field onBlur if sumbit button is not clicked\r\n * set the validateOnChange to true for that field\r\n * check for error\r\n */\r\n\r\nhandleBlur(validationFunc, evt) {\r\n  const field = evt.target.name;\r\n  // validate onBlur only when validateOnChange for that field is false\r\n  // because if validateOnChange is already true there is no need to validate onBlur\r\n  if (\r\n    this.state[field]['validateOnChange'] === false &&\r\n    this.state.submitCalled === false\r\n  ) {\r\n    this.setState(state => ({\r\n      [field]: {\r\n        ...state[field],\r\n        validateOnChange: true,\r\n        error: validationFunc(state[field].value)\r\n      }\r\n    }));\r\n  }\r\n  return;\r\n}\r\n\r\n/*\r\n * update the value in state for that field\r\n * check for error if validateOnChange is true\r\n */\r\nhandleChange(validationFunc, evt) {\r\n  const field = evt.target.name;\r\n  const fieldVal = evt.target.value;\r\n  this.setState(state => ({\r\n    [field]: {\r\n      ...state[field],\r\n      value: fieldVal,\r\n      error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\r\n    }\r\n  }));\r\n}\r\n\r\nhandleSubmit(e) {\r\n  e.preventDefault();\r\n\r\n/*\r\n* validate all fields\r\n* check if all fields are valid if yes then submit the Form\r\n* otherwise set errors for the feilds in the state\r\n*/\r\n\r\nconst { email, password } = this.state;\r\nconst emailError = validateFields.validateEmail(email.value);\r\nconst passwordError = validateFields.validatePassword(password.value);\r\n\r\nif ([emailError, passwordError].every(e => e === false)) {\r\n  // no errors submit the form\r\n\r\n  //получает текущее сотсояние хранилища\r\n  const currentStore = Object.values(store.getState());\r\n //Проверяем, зарегистрирован ли такой email\r\n  const user = currentStore.filter(el => el.email === email.value);\r\n\r\n  if(user.length !== 0) {\r\n    //Отправляем пользователя на страницу аккаунта\r\n    const id = user[0]['id'];\r\n    window.location.hash = `/MyAccount/${id}`;\r\n  }\r\n  else {\r\n    alert(\"Вы не зарегистрированы!\");\r\n    this.setState({ ...initialState, allFieldsValidated: false });\r\n  }\r\n}\r\nelse {\r\n // update the state with errors\r\n    this.setState(state => ({\r\n      titleLink: 'Авторизация',\r\n\r\n       email: {\r\n        ...state.email,\r\n        validateOnChange: true,\r\n        error: emailError\r\n      },\r\n      password: {\r\n        ...state.password,\r\n        validateOnChange: true,\r\n        error: passwordError\r\n      }\r\n    }));\r\n  }\r\n\r\n}//end handlSubmit\r\n\r\nshowAllFieldsValidated() {\r\n  setTimeout(() => {\r\n    this.setState({ allFieldsValidated: false });\r\n  }, 1500);\r\n}\r\n\r\nrender () {\r\n\r\n   let users= JSON.parse(localStorage.getItem('users'));\r\n    const { email, password, allFieldsValidated } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrap p-3\">\r\n        <h3>Форма авторизации</h3>\r\n\r\n        <Form method=\"post\" name=\"auth\" \r\n          className='container col-lg-6 mt-5 border border-dark rounded p-3 js-form'\r\n          onSubmit={e => this.handleSubmit(e)}>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputEmail\">Email address</label>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            className='form-control'\r\n            placeholder='Введите ваш Email'\r\n            id='inputEmail'\r\n            value={email.value}\r\n            onChange={evt =>\r\n              this.handleChange(validateFields.validateEmail, evt)\r\n            }\r\n            onBlur={evt =>\r\n              this.handleBlur(validateFields.validateEmail, evt)\r\n            }\r\n            onFocus={this.handleFocusInput}/>\r\n\r\n          <div className='text-danger'>{email.error}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputPassword\">Password</label>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            className='form-control'\r\n            placeholder='Введите ваш пароль'\r\n            id='inputPassword'\r\n            value={password.value}\r\n            onChange={evt =>\r\n              this.handleChange(validateFields.validatePassword, evt)\r\n            }\r\n            onBlur={evt =>\r\n              this.handleBlur(validateFields.validatePassword, evt)\r\n            }/>\r\n\r\n          <div className='text-danger'>{password.error}</div>\r\n        </div>\r\n\r\n        <button\r\n          type='submit'\r\n          name='auth'\r\n          className='btn btn-blue btn-block'\r\n          onMouseDown={() => this.setState({ submitCalled: true })}>\r\n            Войти\r\n        </button>\r\n      </Form>\r\n\r\n        <div className=\"card-body\">\r\n          {allFieldsValidated && (\r\n            <p className=\"text-success text-center\">\r\n              Вы успешно авторизовались!\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <hr/>\r\n        <h3>Зарегистрированные пользователи</h3>\r\n\r\n        <ul className=\"users-list mt-5\">\r\n\r\n          { users && users.length !== 0 ?\r\n            <li className=\"user-item\">\r\n              <div className=\"user-cell user-cell__title\">Username</div>\r\n              <div className=\"user-cell user-cell__title\">Email</div>\r\n              <div className=\"user-cell user-cell__title\">Password</div>\r\n            </li>\r\n          : null}\r\n\r\n         { users && users.length !== 0 ?\r\n\r\n            Object.values(users).map((user) => {\r\n\r\n              return (\r\n\r\n                <User\r\n                  key = {user.id}\r\n                  id = {user.id}\r\n                  username = {user.username}\r\n                  email = {user.email}\r\n                  password= {user.password}\r\n                  className=\"user-item\"\r\n                  onBtnEditUsersClick = { () => this.props.editUser(user)}\r\n                />\r\n              )\r\n            })\r\n            :\r\n            <p className=\"text-danger text-center\">Зарегистрированных пользователей нет!</p>\r\n          }\r\n          \r\n        </ul>\r\n      </div>\r\n    )\r\n}//end render\r\n\r\n} //end class\r\n\r\nexport  default FormAuth;","import React from 'react';\r\nimport FormAuth from '../FormAuth/FormAuth';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <FormAuth/>\r\n    )\r\n}\r\n\r\nexport default Home;","export const registr = (user) => {\r\n  return {\r\n    type: 'REGISTR',\r\n    payload: user,\r\n  }\r\n}\r\n\r\nexport const editUser = (newState) => {\r\n  return {\r\n    type: 'EDIT USER',\r\n    payload: newState\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form } from 'reactstrap';\r\nimport { validateFields } from '../../Validation';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { registr } from '../../actions';\r\n\r\nconst initialState = {\r\n  username: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n\r\n  email: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n  password: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n  repeatpassword: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n\r\n  submitCalled: false,\r\n  allFieldsValidated: false,\r\n};\r\n\r\nclass FormRegistr extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = initialState;\r\n  }\r\n\r\n/*\r\n * validates the field onBlur if sumbit button is not clicked\r\n * set the validateOnChange to true for that field\r\n * check for error\r\n */\r\n\r\nhandleBlur(validationFunc, evt) {\r\n  const field = evt.target.name;\r\n  // validate onBlur only when validateOnChange for that field is false\r\n  // because if validateOnChange is already true there is no need to validate onBlur\r\n  if (\r\n    this.state[field]['validateOnChange'] === false &&\r\n    this.state.submitCalled === false\r\n  ) {\r\n    this.setState(state => ({\r\n      [field]: {\r\n        ...state[field],\r\n        validateOnChange: true,\r\n        error: validationFunc(state[field].value)\r\n      }\r\n    }));\r\n  }\r\n  return;\r\n}\r\n\r\n/*\r\n * update the value in state for that field\r\n * check for error if validateOnChange is true\r\n */\r\nhandleChange(validationFunc, evt) {\r\n  const field = evt.target.name;\r\n  const fieldVal = evt.target.value;\r\n  this.setState(state => ({\r\n    [field]: {\r\n      ...state[field],\r\n      value: fieldVal,\r\n      error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\r\n    }\r\n  }));\r\n}\r\n\r\nhandleSubmit(evt) {\r\n  evt.preventDefault();\r\n/*\r\n* validate all fields\r\n* check if all fields are valid if yes then submit the Form\r\n* otherwise set errors for the feilds in the state\r\n*/\r\n\r\nconst { username, email, password, repeatpassword } = this.state;\r\nconst usernameError = validateFields.validateUsername(username.value);\r\nconst emailError = validateFields.validateEmail(email.value);\r\nconst passwordError = validateFields.validatePassword(password.value);\r\nconst repeatpasswordError = validateFields.validaterepeatPassword(repeatpassword.value, password.value);\r\n\r\n\r\nif ([usernameError, emailError, passwordError, repeatpasswordError].every(e => e === false)) {\r\n// no errors submit the form\r\n\r\n//Сохраняем введенные в форму данные\r\n  const id = `f${(~~(Math.random()*1e8)).toString(16)}`;\r\n  const currentUser = {\r\n    id: id,\r\n    username: username.value,\r\n    email: email.value,\r\n    password: password.value\r\n  };\r\n\r\n  store.dispatch(registr(currentUser));\r\n\r\n  // clear state and show all fields are validated\r\n  this.setState({ ...initialState, allFieldsValidated: true });\r\n  this.showAllFieldsValidated();\r\n}\r\nelse {\r\n // update the state with errors\r\n    this.setState(state => ({\r\n      titleLink: 'Авторизация',\r\n      username: {\r\n        ...state.username,\r\n        validateOnChange: true,\r\n        error: usernameError\r\n      },\r\n      email: {\r\n        ...state.email,\r\n        validateOnChange: true,\r\n        error: emailError\r\n      },\r\n      password: {\r\n        ...state.password,\r\n        validateOnChange: true,\r\n        error: passwordError\r\n      },\r\n      repeatpassword: {\r\n        ...state.repeatpassword,\r\n        validateOnChange: true,\r\n        error: repeatpasswordError\r\n      }\r\n    }));\r\n  }\r\n}//end handlSubmit\r\n\r\nshowAllFieldsValidated() {\r\n  setTimeout(() => {\r\n    this.setState({ allFieldsValidated: false });\r\n  }, 1500);\r\n}\r\n\r\nrender () {\r\n  const { username, email, password, repeatpassword, allFieldsValidated } = this.state;\r\n\r\n  return (\r\n    <div className=\"wrap p-3\">\r\n      <h3>Форма регистрации</h3>\r\n\r\n      {store.getState().length === 0 ?\r\n      <div>\r\n        <p className=\"message\">Зарегистрированных пользователей нет </p>\r\n      </div>\r\n      : null }\r\n\r\n      <Form method='post' name=\"registr\"\r\n        className='container col-lg-6 mt-5 border border-dark rounded p-3 js-form' \r\n        onSubmit={e => this.handleSubmit(e)}>\r\n\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"inputUserName\">Username</label>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          className='form-control'\r\n          placeholder='Введите ваше имя'\r\n          id='inputUserName'\r\n          value={username.value}\r\n          onChange={evt =>\r\n            this.handleChange(validateFields.validateUsername, evt)\r\n          }\r\n          onBlur={evt =>\r\n            this.handleBlur(validateFields.validateUsername, evt)\r\n          }/>\r\n\r\n          <div className='text-danger'>{username.error}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"inputEmail\">Email address</label>\r\n        <input\r\n          type='email'\r\n          name='email'\r\n          className='form-control'\r\n          placeholder='Введите ваш Email'\r\n          id='inputEmail'\r\n          value={email.value}\r\n          onChange={evt =>\r\n            this.handleChange(validateFields.validateEmail, evt)\r\n          }\r\n          onBlur={evt =>\r\n            this.handleBlur(validateFields.validateEmail, evt)\r\n          }/>\r\n\r\n          <div className='text-danger'>{email.error}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"inputPassword\">Password</label>\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          className='form-control'\r\n          placeholder='Введите ваш пароль'\r\n          id='inputPassword'\r\n          value={password.value}\r\n          onChange={evt =>\r\n            this.handleChange(validateFields.validatePassword, evt)\r\n          }\r\n          onBlur={evt =>\r\n            this.handleBlur(validateFields.validatePassword, evt)\r\n          }/>\r\n\r\n        <div className='text-danger'>{password.error}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n      <label htmlFor=\"inputRepeatPassword\">Repeat Password</label>\r\n      <input\r\n        type='password'\r\n        name='repeatpassword'\r\n        className='form-control'\r\n        placeholder='Повторите пароль'\r\n        id='inputRepeatPassword'\r\n        value={repeatpassword.value}\r\n        onChange={evt =>\r\n          this.handleChange(validateFields.validaterepeatPassword, evt)\r\n        }\r\n        onBlur={evt =>\r\n          this.handleBlur(validateFields.validaterepeatPassword, evt)\r\n        }\r\n        onFocus={this.handleFocusInput}/>\r\n\r\n        <div className='text-danger'>{repeatpassword.error}</div>\r\n        </div>\r\n\r\n        <button\r\n          type='submit'\r\n          name='registr'\r\n          className='btn btn-blue btn-block'\r\n          onMouseDown={() => this.setState({ submitCalled: true })}>\r\n            Зарегистрироваться\r\n        </button>\r\n      </Form>\r\n\r\n      <div className=\"card-body\">\r\n      {allFieldsValidated && (\r\n        <p className=\"text-success text-center\">\r\n          Вы зарегистрированы!\r\n        </p>\r\n      )}\r\n      </div>\r\n    </div>\r\n)\r\n\r\n}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    registr\r\n  }\r\n}\r\n\r\nexport  default connect(mapStateToProps,mapDispatchToProps)(FormRegistr);","import React from 'react';\r\nimport { Form } from 'reactstrap';\r\nimport { validateFields } from '../../Validation';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { editUser } from '../../actions';\r\n\r\nconst initialState = {\r\n  username: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n\r\n  email: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n  password: {\r\n    value: '',\r\n    validateOnChange: false,\r\n    error: ''\r\n  },\r\n\r\n  submitCalled: false,\r\n  allFieldsValidated: false,\r\n  id: ''\r\n};\r\n\r\nclass FormEdit extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let hash = window.location.hash;\r\n    let id = hash.split('/');\r\n    id = id[id.length-1];\r\n\r\n    const currentStore = Object.values(store.getState());\r\n    const user = currentStore.filter(el => el.id === id);\r\n\r\n    const formElement = document.forms.edit;\r\n\r\n    formElement.elements.username.value = user[0].username;\r\n    formElement.elements.email.value = user[0].email;\r\n    formElement.elements.password.value = user[0].password;\r\n\r\n    this.setState(() => ({\r\n      username: {\r\n        value :  user[0].username,\r\n      },\r\n      email: {\r\n        value :  user[0].email,\r\n      },\r\n      password: {\r\n        value :  user[0].password,\r\n      },\r\n      id: id\r\n    }));\r\n  }\r\n\r\n/*\r\n * validates the field onBlur if sumbit button is not clicked\r\n * set the validateOnChange to true for that field\r\n * check for error\r\n */\r\n\r\nhandleBlur(validationFunc, evt) {\r\n  const field = evt.target.name;\r\n  // validate onBlur only when validateOnChange for that field is false\r\n  // because if validateOnChange is already true there is no need to validate onBlur\r\n  if (\r\n    this.state[field]['validateOnChange'] === false &&\r\n    this.state.submitCalled === false\r\n  ) {\r\n    this.setState(state => ({\r\n      [field]: {\r\n        ...state[field],\r\n        validateOnChange: true,\r\n        error: validationFunc(state[field].value)\r\n      }\r\n    }));\r\n  }\r\n  return;\r\n}\r\n\r\n/*\r\n * update the value in state for that field\r\n * check for error if validateOnChange is true\r\n */\r\nhandleChange(validationFunc, evt) {\r\n  const field = evt.target.name;\r\n  const fieldVal = evt.target.value;\r\n  this.setState(state => ({\r\n    [field]: {\r\n      ...state[field],\r\n      value: fieldVal,\r\n      error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\r\n    }\r\n  }));\r\n}\r\n\r\nhandleSubmit(e) {\r\n  e.preventDefault();\r\n/*\r\n* validate all fields\r\n* check if all fields are valid if yes then submit the Form\r\n* otherwise set errors for the feilds in the state\r\n*/\r\n\r\nconst { username, email, password } = this.state;\r\nconst usernameError = validateFields.validateUsername(username.value);\r\nconst emailError = validateFields.validateEmail(email.value);\r\nconst passwordError = validateFields.validatePassword(password.value);\r\n\r\nif ([usernameError, emailError, passwordError].every(e => e === false)) {\r\n  // no errors submit the form\r\n\r\n  //Сохраняем введенные в форму данные\r\n    let id = this.state.id;\r\n    const currentUser = {\r\n      id: id,\r\n      username: username.value,\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n\r\n    const currentState = store.getState();\r\n\r\n    const newState = Object.values(currentState).map(el => {\r\n      if (el.id === currentUser.id) {\r\n        return currentUser;\r\n      }\r\n      return el;\r\n    });\r\n    \r\n    store.dispatch(editUser(newState));\r\n    window.location.hash = `/MyAccount/${this.state.id}`;\r\n\r\n   // clear state and show all fields are validated\r\n   this.setState({ ...initialState, allFieldsValidated: true });\r\n   this.showAllFieldsValidated();\r\n}\r\nelse {\r\n // update the state with errors\r\n    this.setState(state => ({\r\n      titleLink: 'Редактирование профиля',\r\n      username: {\r\n        ...state.username,\r\n        validateOnChange: true,\r\n        error: usernameError\r\n      },\r\n      email: {\r\n        ...state.email,\r\n        validateOnChange: true,\r\n        error: emailError\r\n      },\r\n      password: {\r\n        ...state.password,\r\n        validateOnChange: true,\r\n        error: passwordError\r\n      }\r\n    }));\r\n  }\r\n}//end handlSubmit\r\n\r\nshowAllFieldsValidated() {\r\n  setTimeout(() => {\r\n    this.setState({ allFieldsValidated: false });\r\n  }, 1500);\r\n}\r\n\r\nrender () {\r\n  const { username, email, password, allFieldsValidated } = this.state;\r\n\r\n  return (\r\n    <div className=\"wrap p-3\">\r\n      <h3>Редактирование данных</h3>\r\n\r\n      <Form method='post' name=\"edit\"\r\n        className='container col-lg-6 mt-5 border border-dark rounded p-3 js-form' \r\n        onSubmit={e => this.handleSubmit(e)}>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputUserName\">Username</label>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          className='form-control'\r\n          placeholder='Введите ваше имя'\r\n          id='inputUserName'\r\n          value={username.value}\r\n          onChange={evt =>\r\n            this.handleChange(validateFields.validateUsername, evt)\r\n          }\r\n          onBlur={evt =>\r\n            this.handleBlur(validateFields.validateUsername, evt)\r\n          }\r\n          onFocus={this.handleFocusInput}/>\r\n\r\n        <div className='text-danger'>{username.error}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputEmail\">Email address</label>\r\n        <input\r\n          type='email'\r\n          name='email'\r\n          className='form-control'\r\n          placeholder='Введите ваш Email'\r\n          id='inputEmail'\r\n          value={email.value}\r\n          onChange={evt =>\r\n            this.handleChange(validateFields.validateEmail, evt)\r\n          }\r\n          onBlur={evt =>\r\n            this.handleBlur(validateFields.validateEmail, evt)\r\n          }\r\n          onFocus={this.handleFocusInput}/>\r\n\r\n        <div className='text-danger'>{email.error}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputPassword\">Password</label>\r\n        <input \r\n          type='password'\r\n          name='password'\r\n          className='form-control'\r\n          placeholder='Введите ваш пароль'\r\n          id='inputPassword'\r\n          value={password.value}\r\n          onChange={evt =>\r\n            this.handleChange(validateFields.validatePassword, evt)\r\n          }\r\n          onBlur={evt =>\r\n            this.handleBlur(validateFields.validatePassword, evt)\r\n          }/>\r\n\r\n        <div className='text-danger'>{password.error}</div>\r\n      </div>\r\n\r\n      <button\r\n        type='submit'\r\n        name='save'\r\n        className='btn btn-blue btn-block mb-2'\r\n        onMouseDown={() => this.setState({ submitCalled: true })}>\r\n          Сохранить\r\n      </button>\r\n\r\n      <button\r\n        type='button'\r\n        name='cancel'\r\n        className='btn btn-secondary btn-block'\r\n        onClick={() => {window.history.back()}}>\r\n          Отменить\r\n      </button>\r\n    </Form>\r\n\r\n      <div className=\"card-body\">\r\n        {allFieldsValidated && ( \r\n          <p className=\"text-success text-center\">\r\n            Ваши данные обновлены!\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}//end render\r\n\r\n} //end class\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editUser,\r\n  }\r\n}\r\n\r\nexport  default connect(mapStateToProps,mapDispatchToProps)(FormEdit);\r\n","import React from 'react';\r\n\r\nconst myAccount = (props) => {\r\n    //const {editData, openModal,handleSubmit} = props;\r\n    let hash = window.location.hash;\r\n    let id = hash.split('/');\r\n    id = id[id.length-1];\r\n\r\n    const currentLocalStorage = Object.values(JSON.parse(localStorage.getItem('users')));\r\n\r\n    //Ищем пользователя по id\r\n    const user = currentLocalStorage.filter((el) =>  { console.dir(el); return el['id'] === id});\r\n\r\n    return (\r\n        <div className=\"p-2\">\r\n            <h3 className=\"mb-5\">Мои учетные данные</h3>\r\n\r\n            <div className=\"wrapper col-md-4 mx-auto mb-3 p-3 border border-secondary\">\r\n                <div className=\"user-item\">\r\n                    <span className=\"user-cell__title text-left\">Id:</span> \r\n                    <span className=\"\">{user[0].id}</span>\r\n                </div>\r\n                <div className=\"user-item\">\r\n                    <span className=\"user-cell__title text-left\">Username:</span> \r\n                    <span className=\"\">{user[0].username}</span>\r\n                </div>\r\n                <div className=\"user-item\">\r\n                    <span className=\"user-cell__title text-left\">Email:</span> \r\n                    <span className=\"\">{user[0].email}</span>\r\n                </div>\r\n                <div className=\"user-item\">\r\n                    <span className=\"user-cell__title text-left\">Password:</span> \r\n                    <span className=\"\">{user[0].password}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-blue d-block mb-3 mx-auto\" onClick={() => {window.location.hash =`/FormEdit/${user[0].id}`;}}>Редактировать данные</button>\r\n            <a className=\"btn btn-secondary mx-auto\" href=\"/\">Выйти из аккаунта</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default myAccount;","import React from 'react';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.scss';\n\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport FormRegistr from './components/FormRegistr/FormRegistr';\nimport FormEdit from './components/FormEdit/FormEdit';\nimport User from './components/User/User';\nimport MyAccount from './components/MyAccount/MyAccount';\n\nimport { registr, editUser } from './actions';\n\nclass App extends React.Component {\n  state =  {\n    formName: \"auth\",\n    isAuth: false,\n    users: []\n  }\n\n  componentDidMount() {\n    const local = localStorage.getItem('users');\n    if(local && JSON.parse(local).length !== 0) {\n      this.setState({users: Object.assign(JSON.parse(localStorage.getItem('users')))});\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App pt-3\">\n        <Header/>\n\n        <Switch>\n          <Route key=\"Home\" exact path='/' component={ Home }>\n            <Home/>\n\n            <NavLink to=\"/FormRegistr\" className=\"btn btn-blue\">Зарегистрироваться</NavLink>\n          </Route>\n\n          <Route key=\"FormRegistr\" exact path='/FormRegistr' component={ FormRegistr }>\n            { this.state.users.length !== 0 ?\n            null\n            :\n            <ul className=\"users-list\">\n              {\n                this.state.users.map((user) => { \n                  return (\n                    <User\n                      key = {user.id}\n                      id = {user.id}\n                      username = {user.name}\n                      email= {user.email}\n                      password = {user.password}\n                    />\n                   )\n                 })\n               }\n            </ul>\n            }\n\n            <FormRegistr/>\n\n            <NavLink to=\"/\" className=\"btn btn-blue\">Авторизоваться</NavLink>\n          </Route>\n\n          <Route key=\"FormEdit\" exact path='/FormEdit/:id' component={ FormEdit }>\n            <FormEdit/>\n          </Route>\n\n          <Route key=\"MyAccount\" exact path='/MyAccount/:id' component={ MyAccount }>\n            <MyAccount/>\n          </Route>\n        </Switch>\n      </div>\n    );\n  };\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    users: state,\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    registr,\n    editUser\n}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}